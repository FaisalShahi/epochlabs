{"version":3,"file":"static/js/4302.d6be927b.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"required\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _ref, _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      required: requiredProp,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const disabled = (_ref = disabledProp != null ? disabledProp : control.props.disabled) != null ? _ref : muiFormControl == null ? void 0 : muiFormControl.disabled;\n  const required = requiredProp != null ? requiredProp : control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label, required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      ownerState: ownerState,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["_excluded","FormControlLabelRoot","styled","name","slot","overridesResolver","props","styles","ownerState","_defineProperty","concat","formControlLabelClasses","label","root","capitalize","labelPlacement","_ref3","theme","_extends","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","disabled","flexDirection","color","vars","palette","text","AsteriskComponent","asterisk","_ref4","error","main","FormControlLabel","React","inProps","ref","_ref","_slotProps$typography","useThemeProps","className","_props$componentsProp","componentsProps","control","disabledProp","disableTypography","labelProp","_props$labelPlacement","requiredProp","required","_props$slotProps","slotProps","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","controlProps","forEach","key","fcs","formControlState","states","classes","slots","composeClasses","getFormControlLabelUtilityClasses","useUtilityClasses","typographySlotProps","typography","type","Typography","_jsx","component","clsx","children","_jsxs","generateUtilityClass","generateUtilityClasses","getFormGroupUtilityClass","FormGroupRoot","row","flexWrap","_props$row","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","padding","borderRadius","edge","size","SwitchBaseInput","position","opacity","width","height","top","left","margin","zIndex","autoFocus","checkedProp","checked","checkedIcon","defaultChecked","_props$disableFocusRi","disableFocusRipple","_props$edge","icon","id","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","_props$required","tabIndex","value","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","input","centerRipple","focusRipple","role","undefined","event","nativeEvent","defaultPrevented","newChecked","target"],"sourceRoot":""}