{"version":3,"file":"static/js/2809.4f0aa842.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/link-item.js","components/custom-breadcrumbs/custom-breadcrumbs.js","components/table/utils.js","components/table/use-table.js","components/table/table-empty-rows.js","components/table/table-head-custom.js","components/table/table-selected-action.js","components/table/table-pagination-custom.js","sections/_examples/mui/table-view/basic-table.js","sections/_examples/mui/table-view/utils.js","sections/_examples/mui/table-view/collapsible-table.js","sections/_examples/mui/table-view/sorting-selecting-table.js","sections/_examples/mui/table-view/grouping-fixed-header-table.js","sections/_examples/mui/table-view/index.js","pages/components/mui/table.js","sections/_examples/component-block.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\n// routes\r\nimport { RouterLink } from 'src/routes/components';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\r\n  const { name, href, icon } = link;\r\n\r\n  const styles = {\r\n    typography: 'body2',\r\n    alignItems: 'center',\r\n    color: 'text.primary',\r\n    display: 'inline-flex',\r\n    ...(disabled &&\r\n      !activeLast && {\r\n        cursor: 'default',\r\n        pointerEvents: 'none',\r\n        color: 'text.disabled',\r\n      }),\r\n  };\r\n\r\n  const renderContent = (\r\n    <>\r\n      {icon && (\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            mr: 1,\r\n            display: 'inherit',\r\n            '& svg': { width: 20, height: 20 },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n\r\n      {name}\r\n    </>\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <Link component={RouterLink} href={href} sx={styles}>\r\n        {renderContent}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <Box sx={styles}> {renderContent} </Box>;\r\n}\r\n\r\nBreadcrumbsLink.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.node,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\n//\r\nimport LinkItem from './link-item';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CustomBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink,\r\n  activeLast,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const lastLink = links[links.length - 1].name;\r\n\r\n  return (\r\n    <Box sx={{ ...sx }}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {/* HEADING */}\r\n          {heading && (\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {heading}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* BREADCRUMBS */}\r\n          {!!links.length && (\r\n            <Breadcrumbs separator={<Separator />} {...other}>\r\n              {links.map((link) => (\r\n                <LinkItem\r\n                  key={link.name || ''}\r\n                  link={link}\r\n                  activeLast={activeLast}\r\n                  disabled={link.name === lastLink}\r\n                />\r\n              ))}\r\n            </Breadcrumbs>\r\n          )}\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\r\n      </Stack>\r\n\r\n      {/* MORE LINK */}\r\n      {!!moreLink && (\r\n        <Box sx={{ mt: 2 }}>\r\n          {moreLink.map((href) => (\r\n            <Link\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nCustomBreadcrumbs.propTypes = {\r\n  sx: PropTypes.object,\r\n  action: PropTypes.node,\r\n  links: PropTypes.array,\r\n  heading: PropTypes.string,\r\n  moreLink: PropTypes.array,\r\n  activeLast: PropTypes.bool,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Separator() {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{\r\n        width: 4,\r\n        height: 4,\r\n        borderRadius: '50%',\r\n        bgcolor: 'text.disabled',\r\n      }}\r\n    />\r\n  );\r\n}\r\n","// ----------------------------------------------------------------------\r\n\r\nexport function emptyRows(page, rowsPerPage, arrayLength) {\r\n  return page ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (a[orderBy] === null) {\r\n    return 1;\r\n  }\r\n  if (b[orderBy] === null) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useTable(props) {\r\n  const [dense, setDense] = useState(!!props?.defaultDense);\r\n\r\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\r\n\r\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\r\n\r\n  const [order, setOrder] = useState(props?.defaultOrder || 'asc');\r\n\r\n  const [selected, setSelected] = useState(props?.defaultSelected || []);\r\n\r\n  const onSort = useCallback(\r\n    (id) => {\r\n      const isAsc = orderBy === id && order === 'asc';\r\n      if (id !== '') {\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(id);\r\n      }\r\n    },\r\n    [order, orderBy]\r\n  );\r\n\r\n  const onSelectRow = useCallback(\r\n    (inputValue) => {\r\n      const newSelected = selected.includes(inputValue)\r\n        ? selected.filter((value) => value !== inputValue)\r\n        : [...selected, inputValue];\r\n\r\n      setSelected(newSelected);\r\n    },\r\n    [selected]\r\n  );\r\n\r\n  const onChangeRowsPerPage = useCallback((event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  }, []);\r\n\r\n  const onChangeDense = useCallback((event) => {\r\n    setDense(event.target.checked);\r\n  }, []);\r\n\r\n  const onSelectAllRows = useCallback((checked, inputValue) => {\r\n    if (checked) {\r\n      setSelected(inputValue);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }, []);\r\n\r\n  const onChangePage = useCallback((event, newPage) => {\r\n    setPage(newPage);\r\n  }, []);\r\n\r\n  const onResetPage = useCallback(() => {\r\n    setPage(0);\r\n  }, []);\r\n\r\n  const onUpdatePageDeleteRow = useCallback(\r\n    (totalRowsInPage) => {\r\n      setSelected([]);\r\n      if (page) {\r\n        if (totalRowsInPage < 2) {\r\n          setPage(page - 1);\r\n        }\r\n      }\r\n    },\r\n    [page]\r\n  );\r\n\r\n  const onUpdatePageDeleteRows = useCallback(\r\n    ({ totalRows, totalRowsInPage, totalRowsFiltered }) => {\r\n      const totalSelected = selected.length;\r\n\r\n      setSelected([]);\r\n\r\n      if (page) {\r\n        if (totalSelected === totalRowsInPage) {\r\n          setPage(page - 1);\r\n        } else if (totalSelected === totalRowsFiltered) {\r\n          setPage(0);\r\n        } else if (totalSelected > totalRowsInPage) {\r\n          const newPage = Math.ceil((totalRows - totalSelected) / rowsPerPage) - 1;\r\n          setPage(newPage);\r\n        }\r\n      }\r\n    },\r\n    [page, rowsPerPage, selected.length]\r\n  );\r\n\r\n  return {\r\n    dense,\r\n    order,\r\n    page,\r\n    orderBy,\r\n    rowsPerPage,\r\n    //\r\n    selected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangePage,\r\n    onChangeDense,\r\n    onResetPage,\r\n    onChangeRowsPerPage,\r\n    onUpdatePageDeleteRow,\r\n    onUpdatePageDeleteRows,\r\n    //\r\n    setPage,\r\n    setDense,\r\n    setOrder,\r\n    setOrderBy,\r\n    setSelected,\r\n    setRowsPerPage,\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableEmptyRows({ emptyRows, height }) {\r\n  if (!emptyRows) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        ...(height && {\r\n          height: height * emptyRows,\r\n        }),\r\n      }}\r\n    >\r\n      <TableCell colSpan={9} />\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nTableEmptyRows.propTypes = {\r\n  emptyRows: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst visuallyHidden = {\r\n  border: 0,\r\n  margin: -1,\r\n  padding: 0,\r\n  width: '1px',\r\n  height: '1px',\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  whiteSpace: 'nowrap',\r\n  clip: 'rect(0 0 0 0)',\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableHeadCustom({\r\n  order,\r\n  orderBy,\r\n  rowCount = 0,\r\n  headLabel,\r\n  numSelected = 0,\r\n  onSort,\r\n  onSelectAllRows,\r\n  sx,\r\n}) {\r\n  return (\r\n    <TableHead sx={sx}>\r\n      <TableRow>\r\n        {onSelectAllRows && (\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={!!numSelected && numSelected < rowCount}\r\n              checked={!!rowCount && numSelected === rowCount}\r\n              onChange={(event) => onSelectAllRows(event.target.checked)}\r\n            />\r\n          </TableCell>\r\n        )}\r\n\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || 'left'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\r\n          >\r\n            {onSort ? (\r\n              <TableSortLabel\r\n                hideSortIcon\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : 'asc'}\r\n                onClick={() => onSort(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n\r\n                {orderBy === headCell.id ? (\r\n                  <Box sx={{ ...visuallyHidden }}>\r\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                  </Box>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              headCell.label\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nTableHeadCustom.propTypes = {\r\n  sx: PropTypes.object,\r\n  onSort: PropTypes.func,\r\n  orderBy: PropTypes.string,\r\n  headLabel: PropTypes.array,\r\n  rowCount: PropTypes.number,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n  order: PropTypes.oneOf(['asc', 'desc']),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableSelectedAction({\r\n  dense,\r\n  action,\r\n  rowCount,\r\n  numSelected,\r\n  onSelectAllRows,\r\n  sx,\r\n  ...other\r\n}) {\r\n  if (!numSelected) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      sx={{\r\n        pl: 1,\r\n        pr: 2,\r\n        top: 0,\r\n        left: 0,\r\n        width: 1,\r\n        zIndex: 9,\r\n        height: 58,\r\n        position: 'absolute',\r\n        bgcolor: 'primary.lighter',\r\n        ...(dense && {\r\n          height: 38,\r\n        }),\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Checkbox\r\n        indeterminate={!!numSelected && numSelected < rowCount}\r\n        checked={!!rowCount && numSelected === rowCount}\r\n        onChange={(event) => onSelectAllRows(event.target.checked)}\r\n      />\r\n\r\n      <Typography\r\n        variant=\"subtitle2\"\r\n        sx={{\r\n          ml: 2,\r\n          flexGrow: 1,\r\n          color: 'primary.main',\r\n          ...(dense && {\r\n            ml: 3,\r\n          }),\r\n        }}\r\n      >\r\n        {numSelected} selected\r\n      </Typography>\r\n\r\n      {action && action}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nTableSelectedAction.propTypes = {\r\n  action: PropTypes.node,\r\n  dense: PropTypes.bool,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n  rowCount: PropTypes.number,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TablePagination from '@mui/material/TablePagination';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TablePaginationCustom({\r\n  dense,\r\n  onChangeDense,\r\n  rowsPerPageOptions = [5, 10, 25],\r\n  sx,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Box sx={{ position: 'relative', ...sx }}>\r\n      <TablePagination\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        component=\"div\"\r\n        {...other}\r\n        sx={{\r\n          borderTopColor: 'transparent',\r\n        }}\r\n      />\r\n\r\n      {onChangeDense && (\r\n        <FormControlLabel\r\n          label=\"Dense\"\r\n          control={<Switch checked={dense} onChange={onChangeDense} />}\r\n          sx={{\r\n            pl: 2,\r\n            py: 1.5,\r\n            top: 0,\r\n            position: {\r\n              sm: 'absolute',\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationCustom.propTypes = {\r\n  dense: PropTypes.bool,\r\n  onChangeDense: PropTypes.func,\r\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\r\n  sx: PropTypes.object,\r\n};\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Dessert (100g serving)' },\r\n  { id: 'calories', label: 'Calories', align: 'right' },\r\n  { id: 'fat', label: 'Fat (g)', align: 'right' },\r\n  { id: 'carbs', label: 'Carbs (g)', align: 'right' },\r\n  { id: 'protein', label: 'Protein (g)', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BasicTable() {\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n            {TABLE_DATA.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell>{row.name}</TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","// ----------------------------------------------------------------------\r\n\r\nexport default function createData(name, calories, fat, carbs, protein, price) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n    price,\r\n    history: [\r\n      {\r\n        date: '2020-01-05',\r\n        customerId: '11091700',\r\n        amount: 3,\r\n      },\r\n      {\r\n        date: '2020-01-02',\r\n        customerId: 'Anonymous',\r\n        amount: 1,\r\n      },\r\n    ],\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Table from '@mui/material/Table';\r\nimport Paper from '@mui/material/Paper';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\n//\r\nimport createData from './utils';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\r\n];\r\n\r\nexport default function CollapsibleTable() {\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell align=\"right\">Calories</TableCell>\r\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {TABLE_DATA.map((row) => (\r\n              <CollapsibleTableRow key={row.name} row={row} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction CollapsibleTableRow({ row }) {\r\n  const collapsible = useBoolean();\r\n\r\n  return (\r\n    <>\r\n      <TableRow>\r\n        <TableCell>\r\n          <IconButton\r\n            size=\"small\"\r\n            color={collapsible.value ? 'inherit' : 'default'}\r\n            onClick={collapsible.onToggle}\r\n          >\r\n            <Iconify\r\n              icon={collapsible.value ? 'eva:arrow-ios-upward-fill' : 'eva:arrow-ios-downward-fill'}\r\n            />\r\n          </IconButton>\r\n        </TableCell>\r\n\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\">{row.calories}</TableCell>\r\n\r\n        <TableCell align=\"right\">{row.fat}</TableCell>\r\n\r\n        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n\r\n        <TableCell align=\"right\">{row.protein}</TableCell>\r\n      </TableRow>\r\n\r\n      <TableRow>\r\n        <TableCell sx={{ py: 0 }} colSpan={6}>\r\n          <Collapse in={collapsible.value} unmountOnExit>\r\n            <Paper\r\n              variant=\"outlined\"\r\n              sx={{\r\n                py: 2,\r\n                borderRadius: 1.5,\r\n                ...(collapsible.value && {\r\n                  boxShadow: (theme) => theme.customShadows.z20,\r\n                }),\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" sx={{ m: 2, mt: 0 }}>\r\n                History\r\n              </Typography>\r\n\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Customer</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                    <TableCell align=\"right\">Total price ($)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                  {row.history.map((historyRow) => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.date}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.customerId}</TableCell>\r\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\n\r\nCollapsibleTableRow.propTypes = {\r\n  row: PropTypes.object,\r\n};\r\n","import { useState, useEffect } from 'react';\r\n// @mui\r\nimport Table from '@mui/material/Table';\r\nimport Stack from '@mui/material/Stack';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport {\r\n  useTable,\r\n  emptyRows,\r\n  getComparator,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'name', label: 'Dessert (100g serving)', align: 'left' },\r\n  { id: 'calories', label: 'Calories', align: 'center' },\r\n  { id: 'fat', label: 'Fat (g)', align: 'center' },\r\n  { id: 'carbs', label: 'Carbs (g)', align: 'center' },\r\n  { id: 'protein', label: 'Protein (g)', align: 'center' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function SortingSelectingTable() {\r\n  const table = useTable({\r\n    defaultOrderBy: 'calories',\r\n  });\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setTableData(TABLE_DATA);\r\n  }, []);\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n  });\r\n\r\n  const denseHeight = table.dense ? 34 : 54;\r\n\r\n  return (\r\n    <div>\r\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ p: 3 }}>\r\n        <Typography variant=\"h6\">Sorting & Selecting</Typography>\r\n\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>\r\n            <Iconify icon=\"ic:round-filter-list\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Stack>\r\n\r\n      <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n        <TableSelectedAction\r\n          dense={table.dense}\r\n          numSelected={table.selected.length}\r\n          rowCount={tableData.length}\r\n          onSelectAllRows={(checked) =>\r\n            table.onSelectAllRows(\r\n              checked,\r\n              tableData.map((row) => row.name)\r\n            )\r\n          }\r\n          action={\r\n            <Tooltip title=\"Delete\">\r\n              <IconButton color=\"primary\">\r\n                <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          }\r\n        />\r\n\r\n        <Scrollbar>\r\n          <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\r\n            <TableHeadCustom\r\n              order={table.order}\r\n              orderBy={table.orderBy}\r\n              headLabel={TABLE_HEAD}\r\n              rowCount={tableData.length}\r\n              numSelected={table.selected.length}\r\n              onSort={table.onSort}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.name)\r\n                )\r\n              }\r\n            />\r\n\r\n            <TableBody>\r\n              {dataFiltered\r\n                .slice(\r\n                  table.page * table.rowsPerPage,\r\n                  table.page * table.rowsPerPage + table.rowsPerPage\r\n                )\r\n                .map((row) => (\r\n                  <TableRow\r\n                    hover\r\n                    key={row.name}\r\n                    onClick={() => table.onSelectRow(row.name)}\r\n                    selected={table.selected.includes(row.name)}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox checked={table.selected.includes(row.name)} />\r\n                    </TableCell>\r\n                    <TableCell> {row.name} </TableCell>\r\n                    <TableCell align=\"center\">{row.calories}</TableCell>\r\n                    <TableCell align=\"center\">{row.fat}</TableCell>\r\n                    <TableCell align=\"center\">{row.carbs}</TableCell>\r\n                    <TableCell align=\"center\">{row.protein}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n\r\n              <TableEmptyRows\r\n                height={denseHeight}\r\n                emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n              />\r\n            </TableBody>\r\n          </Table>\r\n        </Scrollbar>\r\n      </TableContainer>\r\n\r\n      <TablePaginationCustom\r\n        count={dataFiltered.length}\r\n        page={table.page}\r\n        rowsPerPage={table.rowsPerPage}\r\n        onPageChange={table.onChangePage}\r\n        onRowsPerPageChange={table.onChangeRowsPerPage}\r\n        //\r\n        dense={table.dense}\r\n        onChangeDense={table.onChangeDense}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator }) {\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n\r\n    if (order !== 0) return order;\r\n\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  return inputData;\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { useTable, TablePaginationCustom } from 'src/components/table';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('India', 'IN', 1324171354, 3287263),\r\n  createData('China', 'CN', 1403500365, 9596961),\r\n  createData('Italy', 'IT', 60483973, 301340),\r\n  createData('United States', 'US', 327167434, 9833520),\r\n  createData('Canada', 'CA', 37602103, 9984670),\r\n  createData('Australia', 'AU', 25475400, 7692024),\r\n  createData('Germany', 'DE', 83019200, 357578),\r\n  createData('Ireland', 'IE', 4857000, 70273),\r\n  createData('Mexico', 'MX', 126577691, 1972550),\r\n  createData('Japan', 'JP', 126317000, 377973),\r\n  createData('France', 'FR', 67022000, 640679),\r\n  createData('United Kingdom', 'GB', 67545757, 242495),\r\n  createData('Russia', 'RU', 146793744, 17098246),\r\n  createData('Nigeria', 'NG', 200962417, 923768),\r\n  createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nconst COLUMNS = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n  {\r\n    id: 'population',\r\n    label: 'Population',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Size\\u00a0(km\\u00b2)',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'Density',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function GroupingFixedHeaderTable() {\r\n  const table = useTable({ defaultRowsPerPage: 10 });\r\n\r\n  return (\r\n    <>\r\n      <TableContainer sx={{ overflow: 'unset' }}>\r\n        <Scrollbar sx={{ maxHeight: 400 }}>\r\n          <Table stickyHeader sx={{ minWidth: 800 }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  colSpan={2}\r\n                  sx={{\r\n                    background: (theme) => theme.palette.background.paper,\r\n                  }}\r\n                >\r\n                  Country\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  colSpan={3}\r\n                  sx={{ background: (theme) => theme.palette.background.paper }}\r\n                >\r\n                  Details\r\n                </TableCell>\r\n              </TableRow>\r\n\r\n              <TableRow>\r\n                {COLUMNS.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ top: 56, minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {TABLE_DATA.slice(\r\n                table.page * table.rowsPerPage,\r\n                table.page * table.rowsPerPage + table.rowsPerPage\r\n              ).map((row) => (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {COLUMNS.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Scrollbar>\r\n      </TableContainer>\r\n\r\n      <TablePaginationCustom\r\n        count={TABLE_DATA.length}\r\n        page={table.page}\r\n        rowsPerPage={table.rowsPerPage}\r\n        onPageChange={table.onChangePage}\r\n        onRowsPerPageChange={table.onChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Container from '@mui/material/Container';\r\nimport CardHeader from '@mui/material/CardHeader';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// components\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n//\r\nimport BasicTable from './basic-table';\r\nimport CollapsibleTable from './collapsible-table';\r\nimport SortingSelectingTable from './sorting-selecting-table';\r\nimport GroupingFixedHeaderTable from './grouping-fixed-header-table';\r\n//\r\nimport ComponentBlock from '../../component-block';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableView() {\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          py: 5,\r\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\r\n        }}\r\n      >\r\n        <Container>\r\n          <CustomBreadcrumbs\r\n            heading=\"Table\"\r\n            links={[\r\n              {\r\n                name: 'Components',\r\n                href: paths.components,\r\n              },\r\n              { name: 'Table' },\r\n            ]}\r\n            moreLink={['https://mui.com/components/tables']}\r\n          />\r\n        </Container>\r\n      </Box>\r\n\r\n      <Container sx={{ my: 10 }}>\r\n        <Stack spacing={3}>\r\n          <ComponentBlock>\r\n            <Card sx={{ width: 1 }}>\r\n              <CardHeader title=\"Basic Table\" />\r\n              <BasicTable />\r\n            </Card>\r\n          </ComponentBlock>\r\n\r\n          <ComponentBlock>\r\n            <Card sx={{ width: 1 }}>\r\n              <SortingSelectingTable />\r\n            </Card>\r\n          </ComponentBlock>\r\n\r\n          <ComponentBlock>\r\n            <Card sx={{ width: 1 }}>\r\n              <CardHeader title=\"Grouping & FixedHeader\" />\r\n              <GroupingFixedHeaderTable />\r\n            </Card>\r\n          </ComponentBlock>\r\n\r\n          <ComponentBlock>\r\n            <Card sx={{ width: 1 }}>\r\n              <CardHeader title=\"Collapsible Table\" />\r\n              <CollapsibleTable />\r\n            </Card>\r\n          </ComponentBlock>\r\n        </Stack>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport TableView from 'src/sections/_examples/mui/table-view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TablePage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> MUI: Table</title>\r\n      </Helmet>\r\n\r\n      <TableView />\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ComponentBlock({ title, sx, children, ...other }) {\r\n  return (\r\n    <Paper\r\n      variant=\"outlined\"\r\n      sx={{\r\n        borderRadius: 1.5,\r\n        borderStyle: 'dashed',\r\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\r\n      }}\r\n    >\r\n      {title && <CardHeader title={title} />}\r\n\r\n      <Stack\r\n        spacing={3}\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        flexWrap=\"wrap\"\r\n        sx={{\r\n          p: 5,\r\n          minHeight: 180,\r\n          ...sx,\r\n        }}\r\n        {...other}\r\n      >\r\n        {children}\r\n      </Stack>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nComponentBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n};\r\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","_objectSpread","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","CustomBreadcrumbs","links","action","heading","moreLink","other","_objectWithoutProperties","_excluded","lastLink","length","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","target","rel","borderRadius","bgcolor","descendingComparator","a","b","orderBy","useTable","props","_useState","useState","defaultDense","_useState2","_slicedToArray","dense","setDense","_useState3","defaultCurrentPage","_useState4","page","setPage","_useState5","defaultOrderBy","_useState6","setOrderBy","_useState7","defaultRowsPerPage","_useState8","rowsPerPage","setRowsPerPage","_useState9","defaultOrder","_useState10","order","setOrder","_useState11","defaultSelected","_useState12","selected","setSelected","onSort","useCallback","id","onSelectRow","inputValue","newSelected","includes","filter","value","concat","_toConsumableArray","onChangeRowsPerPage","event","parseInt","onChangeDense","checked","onSelectAllRows","onChangePage","newPage","onResetPage","onUpdatePageDeleteRow","totalRowsInPage","onUpdatePageDeleteRows","totalRows","totalRowsFiltered","totalSelected","Math","ceil","TableEmptyRows","emptyRows","TableRow","TableCell","colSpan","visuallyHidden","border","margin","padding","overflow","position","whiteSpace","clip","TableHeadCustom","_ref$rowCount","rowCount","headLabel","_ref$numSelected","numSelected","TableHead","Checkbox","indeterminate","onChange","headCell","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","active","onClick","label","TableSelectedAction","pl","pr","top","left","zIndex","ml","TablePaginationCustom","_ref$rowsPerPageOptio","rowsPerPageOptions","TablePagination","borderTopColor","FormControlLabel","control","Switch","py","sm","createData","calories","fat","carbs","protein","TABLE_DATA","TABLE_HEAD","BasicTable","TableContainer","Scrollbar","Table","TableBody","row","price","history","date","customerId","amount","CollapsibleTable","CollapsibleTableRow","collapsible","useBoolean","IconButton","size","onToggle","Iconify","scope","Collapse","in","unmountOnExit","Paper","boxShadow","theme","customShadows","z20","m","historyRow","round","SortingSelectingTable","table","tableData","setTableData","useEffect","arrayLength","dataFiltered","inputData","comparator","stabilizedThis","el","index","sort","applyFilter","denseHeight","justifyContent","p","Tooltip","title","slice","hover","max","count","onPageChange","onRowsPerPageChange","code","population","density","COLUMNS","format","toLocaleString","toFixed","GroupingFixedHeaderTable","maxHeight","stickyHeader","background","palette","paper","column","style","role","tabIndex","TableView","mode","Container","paths","components","my","spacing","ComponentBlock","Card","CardHeader","TablePage","Helmet","borderStyle","alpha","grey","flexWrap","minHeight"],"sourceRoot":""}