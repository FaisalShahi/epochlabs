{"version":3,"file":"static/js/8362.c6778270.chunk.js","mappings":"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","sources":["sections/coming-soon/view.js","hooks/use-countdown.js","pages/coming-soon.js","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { outlinedInputClasses } from '@mui/material/OutlinedInput';\r\n// hooks\r\nimport { useCountdownDate } from 'src/hooks/use-countdown';\r\n// _mock\r\nimport { _socials } from 'src/_mock';\r\n// assets\r\nimport { ComingSoonIllustration } from 'src/assets/illustrations';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ComingSoonView() {\r\n  const { days, hours, minutes, seconds } = useCountdownDate(new Date('01/01/2024 21:30'));\r\n\r\n  return (\r\n    <>\r\n\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        divider={<Box sx={{ mx: { xs: 1, sm: 2.5 } }}>:</Box>}\r\n        sx={{ typography: 'h2' }}\r\n      >\r\n        <Typography variant=\"h3\" sx={{ mt: 2 }}>\r\n          Coming Soon!\r\n        </Typography>\r\n      </Stack>\r\n\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        divider={<Box sx={{ mx: { xs: 1, sm: 2.5 } }}>:</Box>}\r\n        sx={{ typography: 'h2' }}\r\n      >\r\n        <Typography sx={{ color: 'text.secondary' }}>\r\n          We are currently working hard on this page!\r\n        </Typography>\r\n      </Stack>\r\n\r\n      <ComingSoonIllustration sx={{ my: 10, height: 240 }} />\r\n\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        divider={<Box sx={{ mx: { xs: 1, sm: 2.5 } }}>:</Box>}\r\n        sx={{ typography: 'h2' }}\r\n      >\r\n        <TimeBlock label=\"Days\" value={days} />\r\n\r\n        <TimeBlock label=\"Hours\" value={hours} />\r\n\r\n        <TimeBlock label=\"Minutes\" value={minutes} />\r\n\r\n        <TimeBlock label=\"Seconds\" value={seconds} />\r\n      </Stack>\r\n\r\n      {/* <TextField\r\n        fullWidth\r\n        placeholder=\"Enter your email\"\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <Button variant=\"contained\" size=\"large\">\r\n                Notify Me\r\n              </Button>\r\n            </InputAdornment>\r\n          ),\r\n          sx: {\r\n            pr: 0.5,\r\n            [`&.${outlinedInputClasses.focused}`]: {\r\n              boxShadow: (theme) => theme.customShadows.z20,\r\n              transition: (theme) =>\r\n                theme.transitions.create(['box-shadow'], {\r\n                  duration: theme.transitions.duration.shorter,\r\n                }),\r\n              [`& .${outlinedInputClasses.notchedOutline}`]: {\r\n                border: (theme) => `solid 1px ${alpha(theme.palette.grey[500], 0.32)}`,\r\n              },\r\n            },\r\n          },\r\n        }}\r\n        sx={{ my: 5 }}\r\n      /> */}\r\n\r\n      {/* <Stack spacing={1} alignItems=\"center\" justifyContent=\"center\" direction=\"row\">\r\n        {_socials.map((social) => (\r\n          <IconButton\r\n            key={social.name}\r\n            sx={{\r\n              color: social.color,\r\n              '&:hover': {\r\n                bgcolor: alpha(social.color, 0.08),\r\n              },\r\n            }}\r\n          >\r\n            <Iconify icon={social.icon} />\r\n          </IconButton>\r\n        ))}\r\n      </Stack> */}\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction TimeBlock({ label, value }) {\r\n  return (\r\n    <div>\r\n      <Box> {value} </Box>\r\n      <Box sx={{ color: 'text.secondary', typography: 'body1' }}>{label}</Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nTimeBlock.propTypes = {\r\n  label: PropTypes.string,\r\n  value: PropTypes.string,\r\n};\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function useCountdownDate(date) {\r\n  const [countdown, setCountdown] = useState({\r\n    days: '00',\r\n    hours: '00',\r\n    minutes: '00',\r\n    seconds: '00',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => setNewTime(), 1000);\r\n    return () => clearInterval(interval);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const setNewTime = () => {\r\n    const startTime = date;\r\n\r\n    const endTime = new Date();\r\n\r\n    const distanceToNow = startTime.valueOf() - endTime.valueOf();\r\n\r\n    const getDays = Math.floor(distanceToNow / (1000 * 60 * 60 * 24));\r\n\r\n    const getHours = `0${Math.floor(\r\n      (distanceToNow % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    )}`.slice(-2);\r\n\r\n    const getMinutes = `0${Math.floor((distanceToNow % (1000 * 60 * 60)) / (1000 * 60))}`.slice(-2);\r\n\r\n    const getSeconds = `0${Math.floor((distanceToNow % (1000 * 60)) / 1000)}`.slice(-2);\r\n\r\n    setCountdown({\r\n      days: getDays.toString() || '000',\r\n      hours: getHours || '000',\r\n      minutes: getMinutes || '000',\r\n      seconds: getSeconds || '000',\r\n    });\r\n  };\r\n\r\n  return {\r\n    days: countdown.days,\r\n    hours: countdown.hours,\r\n    minutes: countdown.minutes,\r\n    seconds: countdown.seconds,\r\n  };\r\n}\r\n\r\n// Usage\r\n// const countdown = useCountdown(new Date('07/07/2022 21:30'));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function useCountdownSeconds(initCountdown) {\r\n  const [countdown, setCountdown] = useState(initCountdown);\r\n\r\n  const startCountdown = useCallback(() => {\r\n    let remainingSeconds = countdown;\r\n\r\n    const intervalId = setInterval(() => {\r\n      remainingSeconds -= 1;\r\n\r\n      if (remainingSeconds === 0) {\r\n        clearInterval(intervalId);\r\n        setCountdown(initCountdown);\r\n      } else {\r\n        setCountdown(remainingSeconds);\r\n      }\r\n    }, 1000);\r\n  }, [initCountdown, countdown]);\r\n\r\n  const counting = initCountdown > countdown;\r\n\r\n  return { counting, countdown, setCountdown, startCountdown };\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport ComingSoonView from 'src/sections/coming-soon/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ComingSoonPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Coming Soon</title>\r\n      </Helmet>\r\n\r\n      <ComingSoonView />\r\n    </>\r\n  );\r\n}\r\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}"],"names":["ComingSoonView","_useCountdownDate","date","_useState","useState","days","hours","minutes","seconds","_useState2","_slicedToArray","countdown","setCountdown","useEffect","interval","setInterval","setNewTime","clearInterval","startTime","endTime","Date","distanceToNow","valueOf","getDays","Math","floor","getHours","concat","slice","getMinutes","getSeconds","toString","useCountdownDate","_jsxs","_Fragment","children","_jsx","Stack","direction","justifyContent","divider","Box","sx","mx","xs","sm","typography","Typography","variant","mt","color","ComingSoonIllustration","my","height","TimeBlock","label","value","_ref","ComingSoonPage","Helmet","_objectDestructuringEmpty","obj","TypeError"],"sourceRoot":""}